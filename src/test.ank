test2 = import src.test2

fib = test2.fib
fac = test2.fac
Vector2 = (import src.test3).Vector2 

a = def() => 
    println(test2.pi, fib(25), fac(20))

b = def() =>
    match [1, 2, true, [4, 5]] 
    | [] => false
    | [1, ..r, [a, _]] => 
        println(r == [2, true]);
        println(a == 4)

c = def() => 
    let [x, y] = [1, 4] in
    println(x + y == 5)

d = def() =>
    match { x: [{e: 4, f: 5}, false], y: true, abc: true } 
    | { x: [{ e: 4, ..r }, false, ..f], y, .. } => r


e = def() =>
    println(3);
    (return ());
    println(5)

f = def([x, y, ..]) =>
    [x]

g = def() =>
    let v1 = Vector2.New(1, 2) in
    let v2 = Vector2.New(5, 6) in

    Vector2.Add(v1, v2)

h = def() =>
    let i = 0 in
    let x = while i < 10 do
        i = i + 1;
        match i 
        | 5  => continue
        | 10 => break i * 9
        | _  => println(i)
    in
        println(x)

i = def() =>
    for i in 11 do
        match i 
        | 5  => continue
        | 10 => break i * 9
        | _  => println(i)

j = def() =>
    let fib = def(n) =>
        if n <= 2 then 
            1
        else
            fib(n - 1) + fib(n - 2)
    in fib(25)

main = def() =>
    match 4
    | 3 or 4 => true